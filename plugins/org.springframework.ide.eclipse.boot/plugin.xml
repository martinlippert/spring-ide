<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>

   <extension
         id="bootnature"
         name="Spring Boot Nature"
         point="org.eclipse.core.resources.natures">
      <runtime>
         <run class="org.springframework.ide.eclipse.boot.core.SpringBootNature"/>
      </runtime>
      <requires-nature
            id="org.springframework.ide.eclipse.core.springnature">
      </requires-nature>
   </extension>
   <extension
         point="org.eclipse.ui.handlers">
      <handler
            class="org.springframework.ide.eclipse.boot.handlers.EditBootStartersHandler"
            commandId="org.springframework.ide.eclipse.boot.commands.editStartersCommand">
            <enabledWhen>
              <and>
	             <count value="1"/>
	             <iterate>
	           	   <adapt type="org.eclipse.core.resources.IResource">
	           	      <test property="org.eclipse.core.resources.name"
	           	            value="pom.xml"/>
		       	      <test
		                    forcePluginActivation="true"
		                    property="org.springsource.ide.eclipse.boot.isBootResource"
		                    value="true"/>
	           	   </adapt>
	             </iterate>
              </and>
            </enabledWhen>
      </handler>
   </extension>
   
   
   <extension
         point="org.eclipse.ui.menus">
      <menuContribution
            locationURI="popup:org.eclipse.ui.popup.any?after=additions">
            <menu
                  id="org.springsource.ide.eclipse.boot.pomMenu"
                  label="Spring">
                <visibleWhen
                    checkEnabled="false">
	              <and>
		             <count value="1"/>
		             <iterate>
		           	   <adapt type="org.eclipse.core.resources.IResource">
		           	      <test property="org.eclipse.core.resources.name"
		           	            value="pom.xml"/>
			       	      <test
			                    forcePluginActivation="true"
			                    property="org.springsource.ide.eclipse.boot.isBootResource"
			                    value="true"/>
		           	   </adapt>
		             </iterate>
	              </and>
                </visibleWhen>
	            <command
	                  commandId="org.springframework.ide.eclipse.boot.commands.editStartersCommand"
	                  id="org.springframework.ide.eclipse.boot.menus.editStarters"
	                  label="Edit Starters"
	                  mnemonic="S">
	                  <visibleWhen
	                        checkEnabled="true">
	                  </visibleWhen>
	            </command>
            </menu>
      </menuContribution>
   </extension>
 
       <extension
         point="org.eclipse.ui.popupMenus">
   	      <objectContribution
            objectClass="org.eclipse.core.resources.IProject"
            adaptable="true"
            id="org.springframework.ide.eclipse.boot.ui.EnableDisableBootDevtools">
         <visibility>
	        <objectState
	              name="nature"
	              value="org.springframework.ide.eclipse.core.springnature">
	        </objectState>
         </visibility>
         <action
         	class="org.springframework.ide.eclipse.boot.ui.AddRemoveBootNature"
         	enablesFor="+"
         	id="org.springframework.ide.eclipse.boot.ui.AddRemoveBootNature"
         	label="Add/Remove Boot Nature"
			menubarPath="org.springframework.ide.eclipse.ui.tools/group0">
		</action>
         <action
                   class="org.springframework.ide.eclipse.boot.ui.EnableDisableBootDevtools"
                   enablesFor="1"
                   id="org.springframework.ide.eclipse.boot.ui.EnableDisableBootDevtools"
                   label="Add/Remove Boot Devtools"
                   menubarPath="org.springframework.ide.eclipse.ui.tools/group0">
         </action>
      </objectContribution>
   	</extension>
 
  
<extension
       point="org.eclipse.core.expressions.propertyTesters">
    <propertyTester
          class="org.springframework.ide.eclipse.boot.core.BootPropertyTester"
          id="org.springsource.ide.eclipse.boot.BootPropertyTester"
          namespace="org.springsource.ide.eclipse.boot"
          properties="isBootProject,isBootResource"
          type="org.eclipse.core.resources.IResource">
    <!--       type="java.lang.Object" -->
    </propertyTester>
    <propertyTester
          class="org.springframework.ide.eclipse.boot.core.BootJavaElementPropertyTester"
          id="org.springframework.ide.eclipse.boot.core.BootJavaElementPropertyTester"
          namespace="org.springsource.ide.eclipse.boot.javaelement"
          properties="isInBootProject"
          type="org.eclipse.jdt.core.IJavaElement">
    <!--       type="java.lang.Object" -->
    </propertyTester>
 </extension>
 
   <!-- TODO this extension point won't allow us to provide discovery on a per project basis. So it isn't quite right but
        it is all we got for now so let's get something working and then fix that later -->
   <extension
         id="springBootExternalTypes"
         point="org.spring.ide.eclipse.completions.externaltypes">
      <typeSource
            class="org.springframework.ide.eclipse.boot.completions.SpringBootTypeDiscoveryFactory">
      </typeSource>
   </extension>
  
  

    <extension point="org.eclipse.ui.preferencePages">
	 	<page
         category="org.springsource.ide.eclipse.commons.preferencePage"
         class="org.springframework.ide.eclipse.boot.ui.preferences.BootInstallPreferencePage"
         id="org.springframework.ide.eclipse.boot.ui.preferences.BootInstallPreferencePage"
         name="Spring Boot">
   		</page>
   	</extension>
   	
   	<extension
       point="org.springframework.ide.eclipse.core.validators">
    <validator
          class="org.springframework.ide.eclipse.boot.validation.SpringBootValidator"
          enabledByDefault="true"
          icon="resources/icons/boot-icon.png"
          id="bootvalidator"
          markerId="problemmarker"
          name="Boot Validator">
    </validator>
    <rules
          validatorId="org.springframework.ide.eclipse.boot.bootvalidator">
       <rule
             class="org.springframework.ide.eclipse.boot.validation.MissingConfigurationProcessorRule"
             description="Verify that spring-boot-configuration-processor is on classpath when @ConfigurationProperties is used"
             enabledByDefault="true"
             id="missingConfigurationProcessor"
             name="Missing Configuration Processor">
          <message id="MISSING_CONFIGURATION_PROCESSOR" label="Missing Configuration Processor" severity="WARNING" />
       </rule>
    </rules>
 </extension>
   		<extension point="org.eclipse.core.resources.markers"
			id="problemmarker"
			name="Spring Boot Problem">
		<super type="org.springframework.ide.eclipse.core.problemmarker" />
		<attribute name="ruleId"/>
		<attribute name="errorId"/>
		<persistent value="true" />
	</extension>
   	
   	<extension
	point="org.eclipse.ui.ide.markerResolution">
	<markerResolutionGenerator
		markerType="org.springframework.ide.eclipse.boot.problemmarker"
		class="org.springframework.ide.eclipse.boot.quickfix.BootMarkerResolutionGenerator">
	</markerResolutionGenerator>
</extension>

<extension point="org.eclipse.ui.decorators">
<decorator
    id="org.springframework.ide.eclipse.boot.ui.DevtoolsProjectDecorator"
    label="Spring Boot Project Decorator"
    lightweight="true"
    state="true"
    class= "org.springframework.ide.eclipse.boot.ui.BootProjectDecorator">
    <description>
      Decorates projects to show when a project's classpath contains Spring Boot Elements. 
    </description>
    <enablement>
       <or>
	       <objectClass
	             name="org.eclipse.jdt.core.IJavaProject">
	       </objectClass>
	       <objectClass
	             name="org.eclipse.core.resources.IProject">
	       </objectClass>
	   </or>
    </enablement>
  </decorator>
</extension>

</plugin>
